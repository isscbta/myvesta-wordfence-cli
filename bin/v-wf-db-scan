#!/bin/bash

# Check if domain name is provided
if [ -z "$1" ]; then
    echo "Error: Domain name is required"
    exit 1
fi

# Get the domain name
DOMAIN=$1

# Shift off the first argument (domain name) to process additional flags
shift

# Use v-search-domain-owner to find the user associated with the domain
USER=$(v-search-domain-owner "$DOMAIN")
echo "Extracted USER: $USER"
if [ -z "$USER" ]; then
    echo "Error: Unable to find user for domain $DOMAIN"
    exit 1
fi

# Use v-get-database-credentials-of-domain to extract database connection details
DB_CREDENTIALS=$(v-get-database-credentials-of-domain "$DOMAIN")
if [ $? -ne 0 ] || [ -z "$DB_CREDENTIALS" ]; then
    echo "Error: Unable to retrieve database credentials for $DOMAIN"
    exit 1
fi

# Parse the credentials
DB_NAME=$(echo "$DB_CREDENTIALS" | grep "DATABASE_NAME='" | cut -d "'" -f 2)
DB_USER=$(echo "$DB_CREDENTIALS" | grep "DATABASE_USERNAME='" | cut -d "'" -f 2)
DB_PASSWORD=$(echo "$DB_CREDENTIALS" | grep "DATABASE_PASSWORD='" | cut -d "'" -f 2)

# Set MySQL port
DB_PORT=3306

# Determine the host's IP address accessible from the Docker container
HOST_IP=$(docker run --rm alpine ip route | grep default | awk '{print $3}')
DB_HOST=$HOST_IP

# Locate the wp-config.php file and extract the table prefix
WP_CONFIG=$(echo "$DB_CREDENTIALS" | grep "CONFIG_FILE_FULL_PATH='" | cut -d "'" -f 2)
DB_PREFIX=$(grep "\$table_prefix" "$WP_CONFIG" | cut -d "'" -f 2)

# Validate extracted values
if [ -z "$DB_NAME" ] || [ -z "$DB_USER" ] || [ -z "$DB_PASSWORD" ] || [ -z "$DB_HOST" ] || [ -z "$DB_PREFIX" ]; then
    echo "Error: Unable to extract all necessary database credentials"
    exit 1
fi

echo "Extracted DB_NAME: $DB_NAME"
echo "Extracted DB_USER: $DB_USER"
echo "Extracted DB_PASSWORD: $DB_PASSWORD"
echo "Updated DB_HOST: $DB_HOST"
echo "Extracted DB_PREFIX: $DB_PREFIX"
echo "Using MySQL Port: $DB_PORT"

echo "Starting Wordfence database scan for $DOMAIN"

# Run Wordfence DB scan using the custom Docker image with extracted database credentials
docker run -it \
    --network=host \
    -v /root/wfcli-conf:/root/.config/wordfence \
    -e WFCLI_DB_PASSWORD="$DB_PASSWORD" \
    wordfence-cli:latest db-scan \
    -u "$DB_USER" \
    -H "$DB_HOST" \
    -D "$DB_NAME" \
    --port "$DB_PORT" \
    --prefix "$DB_PREFIX" "$@"

# Clean up any exited Wordfence containers
docker container rm $(docker container ls -a | grep 'wordfence' | awk '{print $1}') > /dev/null 2>&1
