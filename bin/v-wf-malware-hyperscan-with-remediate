#!/bin/bash

# Check if domain name is provided
if [ -z "$1" ]; then
    echo "Error: Domain name is required"
    exit 1
fi

# Get the domain name
DOMAIN=$1

# Shift off the first argument (domain name) to process additional flags
shift

# Use v-search-domain-owner to find the user associated with the domain
USER=$(v-search-domain-owner $DOMAIN)
if [ -z "$USER" ]; then
    echo "Error: Unable to find user for domain $DOMAIN"
    exit 1
fi

# Construct the scan path
SCAN="/home/$USER/web/$DOMAIN/public_html"

echo "Starting Wordfence malware scan for $DOMAIN at $SCAN"

# Change directory to where Docker commands can be executed
if [ -d /root/wordfence-cli ]; then
    cd /root/wordfence-cli
fi

# Create Wordfence cache directory if it does not exist
if [ ! -d "/var/cache/wordfence" ]; then
    mkdir -p /var/cache/wordfence
fi

# Run Wordfence scan using Docker and output only infected filenames
docker run -it \
  -v /var/www:/var/www \
  -v /root/wfcli-conf/wordfence-cli.ini:/root/.config/wordfence/wordfence-cli.ini \
  -v /var/cache/wordfence:/var/cache/wordfence \
  -v "$SCAN":"$SCAN" \
  wordfence-cli:latest \
  malware-scan "$SCAN" \
  --match-engine vectorscan \
  --output-columns filename \
  --output-path "$SCAN/wordfence-cli-scan.txt" \
  --cache-directory /var/cache/wordfence \
  "$@"

# Convert CRLF line endings (Wordfence returns CRLF)
if command -v dos2unix >/dev/null 2>&1; then
    dos2unix "$SCAN/wordfence-cli-scan.txt" >/dev/null 2>&1
else
    # Fallback: strip carriage returns
    sed -i 's/\r$//' "$SCAN/wordfence-cli-scan.txt"
fi

# Remove any stopped Wordfence containers created by the scan
docker container rm $(docker container ls -a | grep 'wordfence' | awk '{print $1}') > /dev/null 2>&1

# Display infected files and remediate
if [ -s "$SCAN/wordfence-cli-scan.txt" ]; then
    echo "=== Infected files for $DOMAIN ==="
    cat "$SCAN/wordfence-cli-scan.txt"
    echo "=================================="

    if [ ! -z "$INTERACTIVE" ]; then
        while read -r file; do
            echo "=== Manually checking: $file"
            mcedit $file
            read -p "Do you want to delete the infected file? (y/n): " RESPONSE < /dev/tty
            if [ "$RESPONSE" == "y" ] || [ "$RESPONSE" == "Y" ]; then
                rm -f $file
                echo "= File $file deleted"
            fi
            echo "=================================="
        done < $SCAN/wordfence-cli-scan.txt
        echo "= Remediation completed. Exiting..."
        exit 0
    fi

    # Run Wordfence remediate for infected files only
    docker run -it \
      -v /var/www:/var/www \
      -v /root/wfcli-conf/wordfence-cli.ini:/root/.config/wordfence/wordfence-cli.ini \
      -v "$SCAN":"$SCAN" \
      wordfence-cli:latest \
      remediate $(cat "$SCAN/wordfence-cli-scan.txt")

    # Remove any stopped Wordfence containers created by remediate
    docker container rm $(docker container ls -a | grep 'wordfence' | awk '{print $1}') > /dev/null 2>&1

    # Change ownership of report file to the domain owner
    chown $USER:$USER "$SCAN/wordfence-cli-scan.txt"
    echo "Remediation completed. Report saved to $SCAN/wordfence-cli-scan.txt"
else
    echo "No infected files were found for $DOMAIN."
    rm -f "$SCAN/wordfence-cli-scan.txt"
fi
