#!/bin/bash

# Check if scan path is provided
if [ -z "$1" ]; then
    echo "Error: Scan path is required"
    exit 1
fi

# Get the scan path
SCAN="$1"

# Check if path exists
if [ ! -d "$SCAN" ]; then
    echo "Error: Path does not exist: $SCAN"
    exit 1
fi

# Get the final directory name from the path
BASENAME=$(basename "$SCAN")

# Output file location
OUTPUT_FILE="$SCAN/wordfence-cli-scan.csv"

echo "Starting Wordfence malware scan at $SCAN"

# Change directory to where Docker commands can be executed
if [ -d /root/wordfence-cli ]; then
    cd /root/wordfence-cli
fi

if [ ! -d "/var/cache/wordfence" ]; then
    mkdir -p /var/cache/wordfence
fi

if [ -f "$OUTPUT_FILE" ]; then
    rm "$OUTPUT_FILE"
fi

if [ -z "$SCANPATH" ]; then
    SCANPATH=$SCAN
fi

if [ ! -z "$cday" ]; then
    # Example: cday=-1 v-wf-scan-path /home
    # Example: cday=-1 SCANPATH=/home/*/web v-wf-scan-path /home
    cmin=$((cday * 1440))
fi

if [ ! -z "$chour" ]; then
    # Example: chour=-1 v-wf-scan-path /home
    # Example: chour=-1 SCANPATH=/home/*/web v-wf-scan-path /home
    cmin=$((chour * 60))
fi

# Run Wordfence scan using Docker

if [ ! -z "$cmin" ]; then
    # scan only files that are created or modified in last N minutes
    if [ -z "$all" ]; then
        # only extensions that can be infected:
        # Example: cmin=-1440 v-wf-scan-path /home
        # Example: cmin=-1440 SCANPATH=/home/*/web v-wf-scan-path /home
        find $SCANPATH -cmin $cmin -type f \( -name "*.php" -o -name "*.js" -o -name "*.htm" -o -name "*.html" \) -print0 | docker run -i \
            -v /root/wfcli-conf/wordfence-cli.ini:/root/.config/wordfence/wordfence-cli.ini \
            -v /var/cache/wordfence:/var/cache/wordfence \
            -v $SCAN:$SCAN \
            wordfence-cli:latest \
            malware-scan \
            --read-stdin \
            --match-engine vectorscan \
            --output-format csv \
            --output-path "$OUTPUT_FILE"
    else
        # all extensions:
        # Example: all=1 cmin=-1440 v-wf-scan-path /home
        # Example: all=1 cmin=-1440 SCANPATH=/home/*/web v-wf-scan-path /home
        find $SCANPATH -cmin $cmin -type f -print0 | docker run -i \
            -v /root/wfcli-conf/wordfence-cli.ini:/root/.config/wordfence/wordfence-cli.ini \
            -v /var/cache/wordfence:/var/cache/wordfence \
            -v $SCAN:$SCAN \
            wordfence-cli:latest \
            malware-scan \
            --read-stdin \
            --match-engine vectorscan \
            --output-format csv \
            --output-path "$OUTPUT_FILE"
    fi
else
    # Example: v-wf-scan-path /home
    # Example: SCANPATH=/home/*/web v-wf-scan-path /home
    docker run -it \
        -v /root/wfcli-conf/wordfence-cli.ini:/root/.config/wordfence/wordfence-cli.ini \
        -v /var/cache/wordfence:/var/cache/wordfence \
        -v $SCAN:$SCAN \
        wordfence-cli:latest \
        malware-scan $SCANPATH \
        --match-engine vectorscan \
        --output-format csv \
        --output-path "$OUTPUT_FILE" \
        --cache-directory /var/cache/wordfence \
        "${@:2}"
fi

# Remove leftover containers
docker container rm $(docker container ls -a | grep 'wordfence' | awk '{print $1}') > /dev/null 2>&1

# Display suspicious files
if [ -s "$OUTPUT_FILE" ]; then
    echo "=== Infected files found in $SCAN ==="
    cat "$OUTPUT_FILE"
    echo "======"
    echo "The file with the list of all infected files can be found at: $OUTPUT_FILE"
else
    echo "No infected files were found in $SCAN."
    rm "$OUTPUT_FILE"
fi
